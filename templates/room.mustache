<h1>{{ room }}</h1>
<h6 class="public hide">Public on <a href="/view/{{ room }}">/view/{{ room }}</a></h6>
<div class="hide panel hide-on-connect"><p>You seem to have dropped out. Please wait while we connect you again</p><img src="/assets/wait.gif" /></div>
<div class="alert-box alert wait">Please wait while we pitch a tent for you...</div>
<div class="row">
	<div class="nine columns">
		<div id="thechat"></div>
		<div id="bumchat"></div>
	</div>
	<div class="three columns">
		<ul class="accordion rbar">
			<li class="hide manager">
				<div class="title"><h5>Manager's controls!</h5></div>
				<div class="content">
					<label for="public_room">
						<input type="checkbox" id="public_room" />
						Public Room <abbr title="Makes this room viewable for the public on /view/{{ room }}">?</abbr>
					</label>
					<div class="public hide">Public on <a href="/view/{{ room }}">/view/{{ room }}</a></div>
					<label for="lock_room">
						<input type="checkbox" id="lock_room" />
						Lock Room <abbr title="Prevents new people joining">?</abbr>
					</label>
					<h6>Feeds <abbr title="you can subscribe to feeds that are pushed to this tent">?</abbr></h6>
					<input type="text" id="sub_feed" placeholder="e.g: github:kennydude/tent" />
					<div id="feeds">
					</div>
				</div>
			</li>
			<li class="me">
				<div class="title">You</div>
				<div class="content">
					<div class="row collapse">
						<div class="three mobile-one columns">
							<span class="prefix">nick:</span>
						</div>
						<div class="nine mobile-three columns">
							<input type="text" id="nickname" value="{{ name }}" class="nickname" />
						</div>
					</div>
					<div class="fileupload hide">
						<h5 title="or drag onto the page (notice: images are thumbnailed. share elsewhere for larger). also don't upload giant files">upload</h6>
						<input type="file" id="upload" />
					</div>
				</div>
			</li>
			<li class="hide manager">
				<div class="title">Requests <span class="label round alert requestNumber"></span></div>
				<div class="content">
					<div class="requests"></div>
					<div class="noRequests">There is nobody wanting to join</div>
				</div>
			</li>
			<li class="active">
				<div class="title"><h5 class="show-on-mobile">Who's here</h5></div>
				<div class="peopleHere content">
				</div>
			</li>
		</ul>
		<div class="show-on-mobile" style="height:50px">&nbsp;</div>
	</div>
</div>
{{=<% %>=}}
<!-- Templates -->
<div class="reqTemplate hide">
	<div class="request">
		{{ nickname }} wants to talk
		{{#info}}<br/>
			<small>{{ info }}</small><br/>
		{{/info}}
		<a class="tiny button success allow">ok</a>
		<a class="tiny button alert deny">no</a>
	</div>
</div>
<div class="feedTemplate hide">
	<div class="row">
		<div class="ten columns">
			{{ name }}
		</div>
		<div class="one columns">
			<a href="#" class="rm" title="stop receiving messages from this feed">x</a>
		</div>
	</div>
</div>
<%={{ }}=%>
<div id="composer_box">
	<input type="text" id="composer" placeholder="talk here" />
</div>
<div id="kickModal" class="reveal-modal">
  <h2>Kick user?</h2>
  <p class="lead">Are you sure you want to kick <span class="user"></span></p>
  <p>
  	<a class="button close kick success">yes</a>
  	<a class="button close warn">no</a>
  </p>
  <a class="close-reveal-modal">&#215;</a>
</div>
<div id="dragModal" class="dragModal hide">
</div>
<div class="reveal-modal dragModal show">
	<h2>Drop that file to add it to the chat!</h2>
</div>
<script type="text/javascript">
String.prototype.replaceAll=function(s1, s2) {return this.split(s1).join(s2)}
moreRoom = "/room";
var myNickName = "{{ name }}";
var myTicket = "{{ ticket }}";

function updateR(){
	if($(".requests .request").size() == 0){
		$(".requestNumber").hide(); $(".noRequests").show();
	} else{
		$(".requestNumber").show().text($(".requests .request").size());
		$(".noRequests").hide();
	}
}
function viewport() {
	var e = window, a = 'inner';
	if ( !( 'innerWidth' in window ) ){
		a = 'client';
		e = document.documentElement || document.body;
	}
	return { width : e[ a+'Width' ] , height : e[ a+'Height' ] }
}

function safe_feed(f){
	return f.replaceAll(":", "_").replaceAll("/", "_");
}

sockets();
var socketReady = function() {
	include(["/assets/jquerypp.js", "/assets/hogan.js", "/assets/md5.js", "/assets/jquery.foundation.reveal.js"], function() {

		include("/assets/jquery.foundation.accordion.js", function() {
			$(document).foundationAccordion();
		});
		include("/assets/basechat.js");
		$("#kickModal .close").click(function() {
			$("#kickModal").trigger("reveal:close");
		});	
		var reqTemplate = Hogan.compile($(".reqTemplate").html());
		var feedTemplate = Hogan.compile($(".feedTemplate").html());

		$("#nickname").on("keydown", function(e){
			if(e.keyName() == "\r"){
				socket.emit("nick", {"new": $("#nickname").val()});
				renameUser({"nickname" : $("#nickname").val(),"ticket" : myTicket});
				myNickName = $("#nickname").val();
			}
		});
		$("#composer").on("keydown", function(e){
			if(e.keyName() == "\r"){
				data = {"message":$("#composer").val()};
				socket.emit("msg", data);
				$("#composer").val("");
			}
		});
		$("#sub_feed").on("keydown", function(e){
			if(e.keyName() == "\r"){
				data = {"feed":$("#sub_feed").val()};
				socket.emit("sub_feed", data);
				$("#sub_feed").val("");
			}
		});
		$("#public_room").on("change",function() {
			socket.emit("public", {"public" : $("#public_room").attr("checked") != undefined});
			if( $("#public_room").attr("checked") != undefined ){
				$(".public").show();
			} else{
				$(".public").hide();
			}
		});
		$("#lock_room").on("change",function() {
			socket.emit("lock", {"lock" : $("#lock_room").attr("checked") != undefined});
		});

		socket.on("manager", function(){
			$("<style>").html(".manager{display:block !important;}").appendTo("head");
		});
		socket.on("kick", function(){
			document.location.href = "/?kicked";
		});
		socket.on("newfeed", function(data) {
			f = $("<div>").attr("id", "feed-" + safe_feed(data.feed)).html(feedTemplate.render({"name":data.feed})).appendTo("#feeds");
			$(".rm", f).click(function() {
				socket.emit("rmfeed", {"feed" : data.feed});
				$(this).closest(".row").addClass("grey");
			}).data("feed", data.feed);
		});
		socket.on("rmfeed", function(data) {
			$("#feed-" + safe_feed(data.feed)).remove();
		});

		socket.on("nock", function(data){
			d = $( reqTemplate.render(data) ).appendTo(".requests");

			$(".allow", d).click(function(){
				socket.emit("allow", {"ticket":$(this).data("ticket")});
				$(this).parent().remove();
				updateR();
			}).data("ticket", data.ticket);

			$(".deny", d).text("no").click(function(){
				socket.emit("deny", {"ticket":$(this).data("ticket")});
				$(this).parent().remove();
				updateR();
			}).data("ticket", data.ticket);

			updateR();
		});

		if (window.File && window.FileReader && window.FileList && window.Blob && window.Image) {
			include("/assets/chatfiles.js");
		}
		$(".wait").hide();
	});
};

</script>
